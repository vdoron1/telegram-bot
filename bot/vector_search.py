
from langchain_community.document_loaders import PyPDFLoader
from langchain_community.vectorstores import FAISS
from langchain_community.embeddings import HuggingFaceEmbeddings
import os

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É PDF
DATA_PATH = "data/—Å–ø—Ä–∞–≤–∫–∏.pdf"

# –ó–∞–≥—Ä—É–∂–∞–µ–º PDF-–¥–æ–∫—É–º–µ–Ω—Ç—ã
def load_documents():
    loader = PyPDFLoader(DATA_PATH)
    documents = loader.load()
    return documents

# –ò—Å–ø–æ–ª—å–∑—É–µ–º Hugging Face Embeddings –≤–º–µ—Å—Ç–æ OpenAI
embeddings = HuggingFaceEmbeddings(model_name="sentence-transformers/all-MiniLM-L6-v2")

# –°–æ–∑–¥–∞—ë–º –≤–µ–∫—Ç–æ—Ä–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
vectorstore = FAISS.from_documents(load_documents(), embedding=embeddings)

def search_materials(query: str) -> str:
    """–ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö."""
    docs = vectorstore.similarity_search(query, k=2)
    return "\n\n".join([doc.page_content for doc in docs]) if docs else "üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
